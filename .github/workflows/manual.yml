name: Manual Deploy Docker to Win10

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: myapp
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Save image to tarball
        run: docker save $IMAGE_NAME:$IMAGE_TAG -o image.tar

      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Ensure C:\temp exists
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: powershell -NoProfile -Command "if (-Not (Test-Path 'C:\\temp')) { New-Item -ItemType Directory -Force -Path 'C:\\temp' }"

      - name: Copy image.tar to server home
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" \
            scp -o StrictHostKeyChecking=no -P 22 \
            image.tar \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~

      - name: Deploy container on server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            powershell -NoProfile -Command 'Move-Item -Path "$env:USERPROFILE\image.tar" -Destination "C:\temp\image.tar" -Force'
            powershell -NoProfile -Command 'docker load -i C:\temp\image.tar'
            powershell -NoProfile -Command 'if (docker ps -a --format "{{.Names}}" | findstr "^${{ env.IMAGE_NAME }}$") { docker stop $env:IMAGE_NAME; docker rm $env:IMAGE_NAME }'
            powershell -NoProfile -Command 'docker run -d --name $env:IMAGE_NAME --restart always -p 80:80 $env:IMAGE_NAME:$env:IMAGE_TAG'
